# Default setup: all exposed, no exclusions
# For security reasons, only two endpoints are exposed by
# default:
#  /actuator/health
#  /actuator/info
management.endpoints.jmx.exposure.exclude=
# * means all.
#management.endpoints.web.exposure.include=beans,metrics

# Next line
#management.endpoints.web.base-path=/admin
# causes the actuators to be accessible
# via localhost:8080(or whatever URL is used to
# access the application)/admin, i.e.
# http://localhost:8080/admin/
# instead of the usual
# http://localhost:8080/actuator/

# Example:
# Expose just beans, env and info endpoints.
# NOTE: health and info are not exposed unless listed
# explicitly once the defaults are overidden.
#management.endpoints.web.exposure.include=beans,env,info
# With the line above uncommented, the following actuators
# are exposed:
# {
#   "_links": {
#     "self": {
#       "href": "http://localhost:8080/actuator",
#       "templated": false
#     },
#     "beans": {
#       "href": "http://localhost:8080/actuator/beans",
#       "templated": false
#     },
#     "info": {
#       "href": "http://localhost:8080/actuator/info",
#       "templated": false
#     },
#     "env": {
#       "href": "http://localhost:8080/actuator/env",
#       "templated": false
#     },
#     "env-toMatch": {
#       "href": "http://localhost:8080/actuator/env/{toMatch}",
#       "templated": true
#     }
#   }
# }

management.endpoints.web.exposure.include=*

# http://localhost:8080/actuator/loggers/application shows the log level
# of the "application" package which contains class ActuatorApplication.
# This is just an example - the word, "application" is nothing magic.
# Exposing HTTP Endpoints
# Expose just beans, env and info endpoints
# NOTE: health and info not exposed unless listed
# management.endpoints.web.exposure.include=beans,env,info

# If endpoints exposed explicitly, defaults overridden
# Expose all endpoints
# management.endpoints.web.exposure.include=*
# Default setup


#spring.security.user.name=sergey
#spring.security.user.password=sergey
#spring.security.user.roles=ACTUATOR
# management.endpoints.web.exposure.include=health,info

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#debug=true

# The following was added per Sergi in his email Sat 3/27/2021 12:00 PM
# in which he stated:

# JPA will try to create the database schema for you, but you are creating it explicitly.
# What happens is: your database scripts are executed and then JPA recreates the database schema
# which leads to data deletion.
# 
# Add `spring.jpa.hibernate.ddl-auto=none` in your `application.properties` to instruct JPA you don't
# want the schema to be created from your entities (recommended for production). Just tested it with
# your sample and it outputs 2 instead of 0. Here's some further reading:
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-database-initialization.


spring.jpa.hibernate.ddl-auto=none
